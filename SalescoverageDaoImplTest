package com.ms.datalink.globalDatalink.service;

import com.ms.datalink.globalDatalink.dto.SubmissionRequest;
import com.ms.datalink.globalDatalink.model.MetadataSourceFile;
import org.springframework.stereotype.Service;

import java.util.*;
import java.util.stream.Collectors;

@Service
public class SubmissionService {
    // ... your existing beans and methods ...

    public void processSubmission(SubmissionRequest req) {
        List<MetadataSourceFile> sourceFiles = mapToMetadataSourceFiles(req);
        
        // now you can save or further process these objects:
        sourceFiles.forEach(this::saveMetadataSourceFile);
        
        // continue with uploads, etc.
    }

    private List<MetadataSourceFile> mapToMetadataSourceFiles(SubmissionRequest req) {
        return req.getItems().stream()
            // for each Item, iterate its targetFileMap entries
            .flatMap(item -> item.getTargetFileMap().entrySet().stream()
                .map(entry -> {
                    String lang     = entry.getKey();
                    String targetFn = entry.getValue();

                    MetadataSourceFile msf = new MetadataSourceFile();
                    msf.setClientid(item.getSourceAccountId());
                    msf.setFilename(targetFn);
                    msf.setFiletype(item.getMimeType());
                    msf.setSource_content_id(UUID.randomUUID().toString());
                    msf.setSourceLanguage(req.getSourceLanguage());
                    msf.setTargetLanguage(lang);
                    return msf;
                })
            )
            .collect(Collectors.toList());
    }

    private void saveMetadataSourceFile(MetadataSourceFile msf) {
        // e.g. repository.save(msf) or however you persist it
    }
}
