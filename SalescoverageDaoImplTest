public void execute() {
    String groupName = "msjavacone";
    String theUser = "vadimb";

    GroupRepo groupRepo = firmwideDirectory.groupRepo();
    PersonRepo personRepo = firmwideDirectory.personRepo();

    Optional<Person> userOpt = personRepo.getPersonByUID(theUser);
    if (userOpt.isEmpty()) {
        System.out.println("User with UID '" + theUser + "' not found.");
        return;
    }

    Person targetUser = userOpt.get();

    Optional<Stream<Person>> membersOpt = groupRepo
            .getGroupByName(groupName)
            .map(group -> groupRepo.populateMembers(group, "cn"))
            .map(group -> group.membersByType(Person.class));

    if (membersOpt.isPresent()) {
        Stream<Person> members = membersOpt.get();

        System.out.println("Members of group: " + groupName);
        boolean[] isUserPresent = {false};

        members.forEach(person -> {
            System.out.println(person.fullName().orElse("no-name"));
            if (person.uid().equalsIgnoreCase(targetUser.uid())) {
                isUserPresent[0] = true;
            }
        });

        if (isUserPresent[0]) {
            System.out.println("User '" + theUser + "' IS a member of the group.");
        } else {
            System.out.println(" User '" + theUser + "' is NOT a member of the group.");
        }

    } else {
        System.out.println("Group '" + groupName + "' not found.");
    }
}
